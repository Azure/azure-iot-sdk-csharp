name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

parameters:
- name: maxParallelJobs
  displayName: Maximum jobs to run in parallel. Change maxParallel to 1 make OS builds run in serial rather than in parallel.
  type: number
  # Reasonable target to avoid throttling and contention with several PRs running.
  default: 3

resources:
  - repo: self
    clean: true

jobs:
  
  ### Build nuget packages ###
  - job: Build_Packages
    displayName: Build Nuget Packages
    timeoutInMinutes: 15

    condition: succeeded()
    pool:
      vmImage: windows-2022

    steps:

      - task: PowerShell@2
        displayName: 'Build Packages'
        name: BUILD_PKG
        inputs:
          targetType: 'inline'
          script: |
            $env:FILE_DATE = get-date -f yyyy-MM-dd-hh-mm-ss.f
            Set-Content -Path "$(Build.ArtifactStagingDirectory)/partner-file-path.txt" -Value "azure-iot-sdk/net/pkgs_$env:FILE_DATE"
            Write-Host Package Folder will be appended with date suffix: $env:FILE_DATE
            Write-Host "##vso[task.setvariable variable=NUGET_PKG_DATE;isoutput=true;]$env:FILE_DATE"
            Write-Host Start building release package with $(Agent.Id):$(Agent.MachineName) on $env:FILE_DATE
            $(Build.SourcesDirectory)/build.ps1 -build -clean -configuration Release -package

      - task: CopyFiles@2
        displayName: 'Copy nuget package files to the artifacts folder'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/bin/pkg'
          Contents: '**/*.*nupkg'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/nuget'
        condition: always()

      - task: PublishBuildArtifacts@1
        displayName: 'Publish: Unsigned nuget packages'
        inputs:
          ArtifactName: unsigned_nuget_packages
        condition: always()

  ### Upload unisgned packages for partner signing and release pipeline ###
  - job: Upload_Packages
    displayName: Upload Nuget Packages
    timeoutInMinutes: 15

    condition: succeeded()
    dependsOn:
      - Build_Packages
#      - Windows_Tests
#      - Linux_Tests
### TODO: add these dependency if tests are more stable

    pool:
      vmImage: windows-2022

    variables:
      NUGET_PACKGE_FOLDER: $[ dependencies.Build_Packages.outputs['BUILD_PKG.NUGET_PKG_DATE'] ]

    steps:

      - task: DownloadPipelineArtifact@2
        displayName: 'Download nuget packages from pipeline artifacts'
        inputs:
          buildType: 'current'
          artifactName: 'unsigned_nuget_packages'
          itemPattern: '**/*.*nupkg'
          targetPath: '$(Build.SourcesDirectory)/bin'
            
      - task: PowerShell@2
        displayName: 'Downloaded nuget package files checkpoint'
        inputs:
          targetType: 'inline'
          script: |
            Write-Host "Download contents:"
            gci -Path $(Build.SourcesDirectory)/bin/nuget -Recurse -Force

      - task: PowerShell@2
        displayName: 'Rename Packages for Partner Release Pipeline'
        inputs:
          targetType: 'inline'
          script: |
            Write-Host ""
            Rename-Item $(Build.SourcesDirectory)/bin/nuget $(Build.SourcesDirectory)/bin/pkgs_$(NUGET_PACKGE_FOLDER)
            Write-Host " "
            Write-Host "Package contents (renamed):"
            gci -Path $(Build.SourcesDirectory)/bin -Recurse -Force

#TODO: fix this script to get partner secret from key vault and copy file (avoid update needed for key rotation)
#      - task: AzureCLI@2
#        displayName: 'Copy nuget packages to Partner Release Pipeline Storage'
#        inputs:
#          azureSubscription: azuresdkpartnerdrops
#          scriptType: ps
#          scriptLocation: inlineScript
#          inlineScript: |
#            Write-Host "Copy release package to partner pipeline drops/azure-iot-sdk/net/pkgs_$(BUILD_PKG.NUGET_PKG_DATE)"
#            $env:AZCOPY_SPA_CLIENT_SECRET=get-AzKeyVaultSecret -VaultName azuresdkpartnerdrops-kv -Name azuresdkpartnerdrops-service-principal-key -AsPlainText
#            $env:AZCOPY_SPA_CLIENT_SECRET_APP=get-AzKeyVaultSecret -VaultName azuresdkpartnerdrops-kv -Name azuresdkpartnerdrops-application-id -AsPlainText
#            azcopy login --service-principal --application-id $env:AZCOPY_SPA_CLIENT_SECRET_APP
#            azcopy copy "$(Build.SourcesDirectory)/bin" "https://azuresdkpartnerdrops.blob.core.windows.net/drops/azure-iot-sdk/net" --recursive

      - task: AzureFileCopy@2
        displayName: 'Copy nuget packages to Partner Release Pipeline Storage'
        inputs:
          SourcePath: '$(Build.SourcesDirectory)/bin'
          azureSubscription: azuresdkpartnerdrops
          Destination: AzureBlob
          storage: azuresdkpartnerdrops
          ContainerName: 'drops/asz-ztp/net'

#      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
#        displayName: 'SBOM Generation Task'
#        inputs:
#          BuildDropPath: '$(Build.SourcesDirectory)/bin/pkgs_$(BUILD_PKG.NUGET_PKG_DATE)'
