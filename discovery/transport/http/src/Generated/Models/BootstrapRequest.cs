// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Discovery.Client.Transport.Http.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Bootstrap Request.
    /// </summary>
    public partial class BootstrapRequest
    {
        /// <summary>
        /// Initializes a new instance of the BootstrapRequest class.
        /// </summary>
        public BootstrapRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BootstrapRequest class.
        /// </summary>
        /// <param name="registrationId">The device serial number.</param>
        /// <param name="endorsementKey">Endorsement Key.</param>
        /// <param name="storageRootKey">Storage Root Key.</param>
        /// <param name="csr">Certificate Signing Request.</param>
        public BootstrapRequest(string registrationId, string endorsementKey, string storageRootKey, string csr)
        {
            RegistrationId = registrationId;
            EndorsementKey = endorsementKey;
            StorageRootKey = storageRootKey;
            Csr = csr;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the device serial number.
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets endorsement Key.
        /// </summary>
        [JsonProperty(PropertyName = "endorsementKey")]
        public string EndorsementKey { get; set; }

        /// <summary>
        /// Gets or sets storage Root Key.
        /// </summary>
        [JsonProperty(PropertyName = "storageRootKey")]
        public string StorageRootKey { get; set; }

        /// <summary>
        /// Gets or sets certificate Signing Request.
        /// </summary>
        [JsonProperty(PropertyName = "csr")]
        public string Csr { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RegistrationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RegistrationId");
            }
            if (EndorsementKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndorsementKey");
            }
            if (StorageRootKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StorageRootKey");
            }
            if (Csr == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Csr");
            }
        }
    }
}
