{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Region": {
            "type": "string",
            "metadata": {
                "description": "The main region for resources created by this template."
            }
        },
        "FarRegion": {
            "type": "string",
            "metadata": {
                "description": "The region for the second IoT hub in a DPS that is far away from the test devices."
            }
        },
        "StorageAccountName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "metadata": {
                "description": "The name of the storage account used by the IoT hub."
            }
        },
        "ResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group to create all resources used by tests."
            }
        },
        "UserObjectId": {
            "type": "string",
            "metadata": {
                "description": "Signed in users's objectId"
            }
        },
        "HubName": {
            "type": "string",
            "metadata": {
                "description": "The name of the main IoT hub used by tests."
            }
        },
        "FarHubName": {
            "type": "string",
            "metadata": {
                "description": "The name of the far away IoT hub used by tests."
            }
        },
        "DeviceProvisioningServiceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the DPS used by tests."
            }
        }
    },
    "variables": {
        "StorageAccountNameLower": "[toLower(parameters('StorageAccountName'))]",
        "ConsumerGroupName": "[concat(parameters('ResourceGroup'), '/events/e2e-tests')]",
        "storageAccountId": "[concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/',toLower(parameters('StorageAccountName')))]"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[parameters('ResourceGroup')]",
            "location": "[parameters('Region')]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": false,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": false,
                "accessPolicies": [
                    {
                        "objectId": "[parameters('UserObjectId')]",
                        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "networkAcls": {
                    "defaultAction": "allow",
                    "bypass": "AzureServices",
                    "ipRules": [],
                    "virtualNetworkRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('StorageAccountNameLower')]",
            "location": "[parameters('Region')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountNameLower'), '/default')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountNameLower'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('StorageAccountNameLower'), '/default/fileupload')]",
            "properties": {
                "publicAccess": "None"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountNameLower'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountNameLower'))]"
            ]
        },
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2019-11-04",
            "name": "[parameters('HubName')]",
            "location": "[parameters('Region')]",
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4
                    }
                },
                "cloudToDevice": {
                    "defaultTtlAsIso8601": "PT1H",
                    "maxDeliveryCount": 10,
                    "feedback": {
                        "ttlAsIso8601": "PT1H",
                        "lockDurationAsIso8601": "PT60S",
                        "maxDeliveryCount": 10
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "ttlAsIso8601": "PT1H",
                        "lockDurationAsIso8601": "PT1M",
                        "maxDeliveryCount": 10
                    }
                },
                "StorageEndPoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('StorageAccountNameLower'),';AccountKey=',concat(listKeys(variables('storageAccountId'),'2019-06-01').keys[0].value))]",
                        "containerName": "fileupload"
                    }
                },
                "enableFileUploadNotifications": true
            },
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountNameLower'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountNameLower'))]"
            ]
        },
        {
            "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
            "apiVersion": "2018-04-01",
            "name": "[variables('ConsumerGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('HubName'))]"
            ]
        },
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2019-11-04",
            "name": "[parameters('FarHubName')]",
            "location": "[parameters('FarRegion')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            }
        },
        {
            "type": "Microsoft.Devices/provisioningServices",
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "name": "[parameters('DeviceProvisioningServiceName')]",
            "apiVersion": "2017-11-15",
            "location": "[parameters('Region')]",
            "tags": {},
            "properties": {
                "iotHubs": [
                    {
                        "connectionString": "[concat('HostName=',parameters('HubName'),'.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', parameters('HubName'), 'iothubowner'), '2019-11-04').primaryKey)]",
                        "location": "[parameters('Region')]",
                        "name": "[concat(parameters('HubName'),'.azure-devices.net')]"
                    },
                    {
                        "connectionString": "[concat('HostName=',parameters('FarHubName'),'.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', parameters('FarHubName'), 'iothubowner'), '2019-11-04').primaryKey)]",
                        "location": "[parameters('FarRegion')]",
                        "name": "[concat(parameters('FarHubName'),'.azure-devices.net')]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('HubName'))]",
                "[resourceId('Microsoft.Devices/IotHubs', parameters('FarHubName'))]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[parameters('ResourceGroup')]",
            "location": "[parameters('Region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('HubName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Security/IoTSecuritySolutions",
            "apiVersion": "2019-08-01",
            "name": "[parameters('ResourceGroup')]",
            "location": "[parameters('Region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', parameters('HubName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces',  parameters('ResourceGroup'))]"
            ],
            "properties": {
                "workspace": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('ResourceGroup'))]",
                "status": "Enabled",
                "export": [
                    "RawEvents"
                ],
                "disabledDataSources": [],
                "displayName": "[parameters('ResourceGroup')]",
                "iotHubs": [
                    "[resourceId('Microsoft.Devices/IotHubs', parameters('ResourceGroup'))]"
                ],
                "recommendationsConfiguration": [],
                "unmaskedIpLoggingStatus": "Enabled"
            }
        }
    ],
    "outputs": {
        "hubConnectionString": {
            "type": "string",
            "value": "[concat('HostName=',parameters('HubName'),'.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', parameters('HubName'), 'iothubowner'), '2019-11-04').primaryKey)]"
        },
        "eventHubConnectionString": {
            "type": "string",
            "value": "[concat('Endpoint=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('ResourceGroup')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', parameters('ResourceGroup')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey, ';EntityPath=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('ResourceGroup')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).eventHubEndpoints.events.path)]"
        },
        "deviceProvisioningServiceConnectionString": {
            "type": "string",
            "value": "[concat('HostName=',parameters('DeviceProvisioningServiceName'),'.azure-devices-provisioning.net;SharedAccessKeyName=provisioningserviceowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/ProvisioningServices/keys', parameters('DeviceProvisioningServiceName'), 'provisioningserviceowner'), '2017-11-15').primaryKey)]"
        },
        "storageAccountConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountNameLower'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountNameLower')),'2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]"
        },
        "workspaceId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('ResourceGroup')), '2017-03-15-preview').customerId]"
        }
    }
}