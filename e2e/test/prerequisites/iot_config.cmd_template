@REM Copyright (c) Microsoft. All rights reserved.
@REM Licensed under the MIT license. See LICENSE file in the project root for full license information.

@REM To configure your environment, run this before running the E2E tests.
@REM If needed, start Visual Studio from the same command prompt to allow E2E test debugging.

@REM ---------- IoT Hub Configuration ----------
@REM See Configuration.IoTHub.cs for usage details.

@REM IoT Hub Owner connection string:
set IOTHUB_CONN_STRING_CSHARP=

@REM Use the following Powershell command to retrieve the Base64 encoding of a file:
@REM Use Powershell: [Convert]::ToBase64String((Get-Content myFileName -Encoding Byte)) to generate.

@REM X509 Certificate 1 thumbprint:
set IOTHUB_PFX_X509_THUMBPRINT=
@REM X509 PFX Base64 encoded Certificate 1 (empty password):
set IOTHUB_X509_PFX_CERTIFICATE=

@REM EventHub connection string for the messages/events endpoint:
set IOTHUB_EVENTHUB_CONN_STRING_CSHARP=

@REM EventHub compatible name:
set IOTHUB_EVENTHUB_COMPATIBLE_NAME=

@REM EventHub consumer group:
set IOTHUB_EVENTHUB_CONSUMER_GROUP=

@REM ---------- Azure Security Center For IoT - Log Analytics Configuration ----------
@REM the iot hub above must be registered to Azure Security Center for IoT security solution
@REM with the feature export raw events set to on

@REM the Azure Security Center for IoT Log Analytics workspace that connected to the hub
set LA_WORKSPACE_ID=

@REM the Azure Active Directory tenant of the Log Analytics workspace
set LA_AAD_TENANT=

@REM the Azure Active Directory app id that has reader role on the workspace
set LA_AAD_APP_ID=

@REM the certificate credentials for the given app
set LA_AAD_APP_CERT_BASE64=

@REM ---------- Variables required for running Azure IoT Hub Stress Test and Azure IoT Samples for C# ------------
@REM Device primary and secondary connection strings:
set IOTHUB_DEVICE_CONN_STRING=
set IOTHUB_DEVICE_CONN_STRING2=

@REM IoT Hub Module connection string:
set IOTHUB_MODULE_CONN_STRING=
set IOTHUB_MODULE_CONN_STRING2=

@REM ---------- Device Provisioning Service Configuration ----------
@REM See Configuration.Provisioning.cs for usage details.

@REM DPS ID Scope
set DPS_IDSCOPE=

@REM The DPS Global Device Endpoint (the default is defined in code)
set DPS_GLOBALDEVICEENDPOINT=global.azure-devices-provisioning.net

@REM X509 PFX Base64 encoded Device Certificate with recommended RegistrationID: iothubx509device1 (recommended IOTHub DeviceID: provisionedx509device1)
@REM This certificate should have CN=<RegistrationID>.
set DPS_INDIVIDUALX509_PFX_CERTIFICATE=

@REM X509 PFX Group certificate.
@REM RegistrationID/DeviceID is xdevice1.
@REM This certificate should have CN=xdevice1
set DPS_GROUPX509_PFX_CERTIFICATE=

@REM X509 PFX Certificate password
set DPS_X509_PFX_CERTIFICATE_PASSWORD=

@REM X509 P7B Certificate chain.
@REM This is the chain ending up in the root that has been verified by the Provisioning service.
@REM The CN=xdevice1 certificate should be signed by an issuer within this chain.
set DPS_GROUPX509_CERTIFICATE_CHAIN=

@REM Provisioning service owner connection string.
set PROVISIONING_CONNECTION_STRING=

@REM Custom allocation webhook url
@REM This webhook is used during provisioning tests to provision devices to certain iot hubs
@REM For these tests, the azure function is expected to always choose to provision to the hub with the longest hostname
set CUSTOM_ALLOCATION_POLICY_WEBHOOK=

@REM Far away iot hub hostname.
@REM Reprovisioning tests rely on the dps instance under test to have two linked iothubs to provision to.
@REM This hub does not currently need to be far away from the dps instance, but it does need to be linked to the dps instance alongside the IOTHUB_CONN_STRING_CSHARP hub.
@REM Only the hostname is needed, not the full connection string
set FAR_AWAY_IOTHUB_HOSTNAME=


@REM ---------- Invalid Certificate validation ----------
@REM The connection strings below point to servers with incorrect TLS server certificates. Tests will attempt to connect and expect that the TLS connection ends in a security exception.

set IOTHUB_DEVICE_CONN_STRING_INVALIDCERT=
set IOTHUB_CONN_STRING_INVALIDCERT=
set DPS_GLOBALDEVICEENDPOINT_INVALIDCERT=
set PROVISIONING_CONNECTION_STRING_INVALIDCERT=

@REM Proxy configuration:
set IOTHUB_PROXY_SERVER_ADDRESS=

exit /B 0
