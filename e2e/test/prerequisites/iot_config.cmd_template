@REM Copyright (c) Microsoft. All rights reserved.
@REM Licensed under the MIT license. See LICENSE file in the project root for full license information.

@REM To configure your environment, run this before running the E2E tests.
@REM If needed, start Visual Studio from the same command prompt to allow E2E test debugging.

@REM ---------- IoT Hub Configuration ----------
@REM See Configuration.IoTHub.cs for usage details.

@REM IoT Hub Owner connection string:
set IOTHUB_CONN_STRING_CSHARP=

@REM Device primary and secondary connection strings:
set IOTHUB_DEVICE_CONN_STRING=
set IOTHUB_DEVICE_CONN_STRING2=

@REM IoT Hub Module connection string:
set IOTHUB_MODULE_CONN_STRING=
set IOTHUB_MODULE_CONN_STRING2=

@REM Use the following Powershell command to retrieve the Base64 encoding of a file:
@REM Use Powershell: [Convert]::ToBase64String((Get-Content myFileName -Encoding Byte)) to generate.

@REM X509 Certificate 1 thumbprint:
set IOTHUB_PFX_X509_THUMBPRINT=
@REM X509 PFX Base64 encoded Certificate 1 (empty password):
set IOTHUB_X509_PFX_CERTIFICATE=

@REM X509 Certificate 2 thumbprint:
set IOTHUB_PFX_X509_THUMBPRINT2=

@REM EventHub connection string for the messages/events endpoint:
set IOTHUB_EVENTHUB_CONN_STRING_CSHARP=

@REM EventHub compatible name:
set IOTHUB_EVENTHUB_COMPATIBLE_NAME=

@REM EventHub consumer group:
set IOTHUB_EVENTHUB_CONSUMER_GROUP=

@REM ---------- Device Provisioning Service Configuration ----------
@REM See Configuration.Provisioning.cs for usage details.

@REM DPS ID Scope 
set DPS_IDSCOPE=

@REM The DPS Global Device Endpoint (the default is defined in code)
set DPS_GLOBALDEVICEENDPOINT=global.azure-devices-provisioning.net

@REM X509 PFX Base64 encoded Device Certificate with recommended RegistrationID: iothubx509device1 (recommended IOTHub DeviceID: provisionedx509device1)
@REM This certificate should have CN=<RegistrationID>.
set DPS_INDIVIDUALX509_PFX_CERTIFICATE=

@REM X509 PFX Group certificate.
@REM RegistrationID/DeviceID is xdevice1.
@REM This certificate should have CN=xdevice1
set DPS_GROUPX509_PFX_CERTIFICATE=

@REM X509 P7B Certificate chain.
@REM This is the chain ending up in the root that has been verified by the Provisioning service.
@REM The CN=xdevice1 certificate should be signed by an issuer within this chain.
set DPS_GROUPX509_CERTIFICATE_CHAIN=

@REM TPM device registration ID.
set DPS_TPM_REGISTRATIONID=indtpmdevice1

@REM TPM device device ID:
set DPS_TPM_DEVICEID=provisionedtpm1

@REM Provisioning service owner connection string.
set PROVISIONING_CONNECTION_STRING=

@REM Provisioning service host.
set PROVISIONING_SERVICE_HOST=

@REM ---------- Invalid Certificate validation ----------
@REM The connection strings below point to servers with incorrect TLS server certificates. Tests will attempt to connect and expect that the TLS connection ends in a security exception.

set IOTHUB_DEVICE_CONN_STRING_INVALIDCERT=
set IOTHUB_CONN_STRING_INVALIDCERT=
set DPS_GLOBALDEVICEENDPOINT_INVALIDCERT=
set PROVISIONING_CONNECTION_STRING_INVALIDCERT=

@REM Proxy configuration:
set IOTHUB_PROXY_SERVER_ADDRESS=

exit /B 0
