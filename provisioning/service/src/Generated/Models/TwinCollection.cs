// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Service.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a collection of properties within a Twin
    /// </summary>
    public partial class TwinCollection
    {
        /// <summary>
        /// Initializes a new instance of the TwinCollection class.
        /// </summary>
        public TwinCollection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TwinCollection class.
        /// </summary>
        /// <param name="additionalProperties">Unmatched properties from the
        /// message are deserialized this collection</param>
        /// <param name="version">Version of the TwinCollection</param>
        /// <param name="count">Number of properties in the
        /// TwinCollection</param>
        /// <param name="metadata">Metadata for the TwinCollection</param>
        public TwinCollection(IDictionary<string, object> additionalProperties = default(IDictionary<string, object>), long? version = default(long?), int? count = default(int?), Metadata metadata = default(Metadata))
        {
            AdditionalProperties = additionalProperties;
            Version = version;
            Count = count;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unmatched properties from the message are deserialized
        /// this collection
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Gets or sets version of the TwinCollection
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public long? Version { get; set; }

        /// <summary>
        /// Gets or sets number of properties in the TwinCollection
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// Gets or sets metadata for the TwinCollection
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Metadata Metadata { get; set; }

    }
}
