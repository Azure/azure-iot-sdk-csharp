// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Service.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Custom allocation definition.
    /// </summary>
    public partial class CustomAllocationDefinition
    {
        /// <summary>
        /// Initializes a new instance of the CustomAllocationDefinition class.
        /// </summary>
        public CustomAllocationDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomAllocationDefinition class.
        /// </summary>
        /// <param name="webhookUrl">The webhook URL used for allocation
        /// requests.</param>
        /// <param name="apiVersion">The API version of the provisioning
        /// service types (such as IndividualEnrollment) sent in the custom
        /// allocation request. Supported versions include:
        /// "2018-09-01-preview"</param>
        public CustomAllocationDefinition(string webhookUrl, string apiVersion)
        {
            WebhookUrl = webhookUrl;
            ApiVersion = apiVersion;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the webhook URL used for allocation requests.
        /// </summary>
        [JsonProperty(PropertyName = "webhookUrl")]
        public string WebhookUrl { get; set; }

        /// <summary>
        /// Gets or sets the API version of the provisioning service types
        /// (such as IndividualEnrollment) sent in the custom allocation
        /// request. Supported versions include: "2018-09-01-preview"
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WebhookUrl == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WebhookUrl");
            }
            if (ApiVersion == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApiVersion");
            }
        }
    }
}
