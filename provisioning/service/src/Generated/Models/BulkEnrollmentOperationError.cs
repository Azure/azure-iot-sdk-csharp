// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Service.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Bulk enrollment operation error
    /// </summary>
    public partial class BulkEnrollmentOperationError
    {
        /// <summary>
        /// Initializes a new instance of the BulkEnrollmentOperationError
        /// class.
        /// </summary>
        public BulkEnrollmentOperationError()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BulkEnrollmentOperationError
        /// class.
        /// </summary>
        /// <param name="registrationId">Device registration id.</param>
        /// <param name="errorCode">Error code</param>
        /// <param name="errorStatus">Error status</param>
        public BulkEnrollmentOperationError(string registrationId, int errorCode, string errorStatus)
        {
            RegistrationId = registrationId;
            ErrorCode = errorCode;
            ErrorStatus = errorStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets device registration id.
        /// </summary>
        [JsonProperty(PropertyName = "registrationId")]
        public string RegistrationId { get; set; }

        /// <summary>
        /// Gets or sets error code
        /// </summary>
        [JsonProperty(PropertyName = "errorCode")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// Gets or sets error status
        /// </summary>
        [JsonProperty(PropertyName = "errorStatus")]
        public string ErrorStatus { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RegistrationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RegistrationId");
            }
            if (ErrorStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ErrorStatus");
            }
        }
    }
}
