// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Devices.Provisioning.Client.Transport.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Provides status details for long running operations.
    /// </summary>
    public partial class OnboardOperationStatusResponse
    {
        /// <summary>
        /// Initializes a new instance of the OnboardAcceptedResponse class.
        /// </summary>
        public OnboardOperationStatusResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OnboardAcceptedResponse class.
        /// </summary>
        /// <param name="id">The unique ID of the operation.</param>
        /// <param name="status">The status of the operation. Possible values
        /// include: 'InProgress', 'Succeeded', 'Failed', 'Canceled'</param>
        /// <param name="error">Error object that describes the error when
        /// status is "Failed".</param>
        /// <param name="result">The result of the operation.</param>
        public OnboardOperationStatusResponse(string id, string status, AzureCoreFoundationsError error = default(AzureCoreFoundationsError), Device result = default(Device))
        {
            Id = id;
            Status = status;
            Error = error;
            Result = result;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique ID of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the status of the operation. Possible values include:
        /// 'InProgress', 'Succeeded', 'Failed', 'Canceled'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets error object that describes the error when status is
        /// "Failed".
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public AzureCoreFoundationsError Error { get; set; }

        /// <summary>
        /// Gets or sets the result of the operation.
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public Device Result { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (Error != null)
            {
                Error.Validate();
            }
            if (Result != null)
            {
                Result.Validate();
            }
        }
    }
}
